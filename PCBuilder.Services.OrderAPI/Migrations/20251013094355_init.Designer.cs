// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCBuilder.Services.OrderAPI.Data;

#nullable disable

namespace PCBuilder.Services.OrderAPI.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20251013094355_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PCBuilder.Services.OrderAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "GPU",
                            Description = "FAST AS FUCK",
                            ImageUrl = "https://cdn.webhallen.com/images/product/378145?trim&w=1400",
                            Name = "RTX 5090",
                            Price = 2000000.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "GPU",
                            Description = "FAST AF",
                            ImageUrl = "https://cdn.webhallen.com/images/product/378849?trim&w=1400",
                            Name = "RTX 5070 Ti",
                            Price = 3000000.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
